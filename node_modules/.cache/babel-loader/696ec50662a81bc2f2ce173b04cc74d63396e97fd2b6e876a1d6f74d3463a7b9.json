{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport data from '../../data.json';\nconst ratingSlice = createSlice({\n  name: 'rating',\n  initialState: {\n    items: data,\n    // исходный список элементов\n    sort: '',\n    randomRatingIntervalId: null // идентификатор интервала для генерации случайных оценок\n  },\n\n  reducers: {\n    setRating: (state, action) => {\n      console.log('action', action);\n      const {\n        id,\n        rating\n      } = action.payload;\n      console.log(Array.isArray(state.items));\n      const item = state.items.body.find(item => item.id === id);\n      // const item = state.items.filter((item) => item.id === id)[0];\n      if (item) {\n        item.rating = rating;\n      }\n    },\n    setSort(state, action) {\n      console.log('action', action);\n      if (action.payload === 'By rating') {\n        state.items.sort((a, b) => b.rating - a.rating);\n      }\n      state.sort = action.payload;\n    }\n  }\n});\nexport const {\n  setRating,\n  setSort\n} = ratingSlice.actions;\nexport default ratingSlice.reducer;\n\n//   setSort(state, action) {\n//     console.log('action', action);\n//     state.sort = action.payload;\n//     if (state.sort === 'By rating') {\n//       state.items.sort((a, b) => b.rating - a.rating);\n//     }\n//   },","map":{"version":3,"names":["createSlice","data","ratingSlice","name","initialState","items","sort","randomRatingIntervalId","reducers","setRating","state","action","console","log","id","rating","payload","Array","isArray","item","body","find","setSort","a","b","actions","reducer"],"sources":["C:/Java45/SingersRate/src/redux/slices/ratingSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport data from '../../data.json';\r\n\r\nconst ratingSlice = createSlice({\r\n  name: 'rating',\r\n  initialState: {\r\n    items: data, // исходный список элементов\r\n    sort: '', \r\n    randomRatingIntervalId: null, // идентификатор интервала для генерации случайных оценок\r\n  },\r\n  reducers: {\r\n    setRating: (state, action) => {\r\n      console.log('action', action);\r\n      const { id, rating } = action.payload;\r\n      console.log(Array.isArray(state.items))\r\n      const item = state.items.body.find((item) => item.id === id);\r\n      // const item = state.items.filter((item) => item.id === id)[0];\r\n      if (item) {\r\n        item.rating = rating;\r\n      }\r\n    },\r\n    setSort(state, action) {\r\n      console.log('action', action);\r\n      if(action.payload === 'By rating') {\r\n        state.items.sort((a, b) => b.rating - a.rating);\r\n      }\r\n      state.sort = action.payload;\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const {\r\n  setRating,\r\n  setSort\r\n} = ratingSlice.actions;\r\n\r\nexport default ratingSlice.reducer;\r\n\r\n//   setSort(state, action) {\r\n//     console.log('action', action);\r\n//     state.sort = action.payload;\r\n//     if (state.sort === 'By rating') {\r\n//       state.items.sort((a, b) => b.rating - a.rating);\r\n//     }\r\n//   },"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,iBAAiB;AAElC,MAAMC,WAAW,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI;IAAE;IACbK,IAAI,EAAE,EAAE;IACRC,sBAAsB,EAAE,IAAI,CAAE;EAChC,CAAC;;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC7B,MAAM;QAAEG,EAAE;QAAEC;MAAO,CAAC,GAAGJ,MAAM,CAACK,OAAO;MACrCJ,OAAO,CAACC,GAAG,CAACI,KAAK,CAACC,OAAO,CAACR,KAAK,CAACL,KAAK,CAAC,CAAC;MACvC,MAAMc,IAAI,GAAGT,KAAK,CAACL,KAAK,CAACe,IAAI,CAACC,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MAC5D;MACA,IAAIK,IAAI,EAAE;QACRA,IAAI,CAACJ,MAAM,GAAGA,MAAM;MACtB;IACF,CAAC;IACDO,OAAOA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC7B,IAAGA,MAAM,CAACK,OAAO,KAAK,WAAW,EAAE;QACjCN,KAAK,CAACL,KAAK,CAACC,IAAI,CAAC,CAACiB,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACT,MAAM,GAAGQ,CAAC,CAACR,MAAM,CAAC;MACjD;MACAL,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACK,OAAO;IAC7B;EAEF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXP,SAAS;EACTa;AACF,CAAC,GAAGpB,WAAW,CAACuB,OAAO;AAEvB,eAAevB,WAAW,CAACwB,OAAO;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}