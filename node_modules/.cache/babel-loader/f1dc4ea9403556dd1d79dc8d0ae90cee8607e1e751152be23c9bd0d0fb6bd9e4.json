{"ast":null,"code":"var _jsxFileName = \"C:\\\\Java45\\\\SingersRate\\\\src\\\\components\\\\singerList\\\\SingerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from '../../css_modules/singerlist.module.css';\nimport imgRate from '../../assets/img/Component.png';\nimport data from '../../data.json';\nimport { setRating } from '../../redux/slices/ratingSlice';\nimport { setSort } from '../../redux/slices/ratingSlice';\nimport SingerItem from '../singerItem/SingerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingerList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\n  const [randomRating, setRandomRating] = useState(null);\n  const handleRandomRating = () => {\n    if (randomRatingIntervalId) {\n      clearInterval(randomRatingIntervalId);\n      setRandomRatingIntervalId(null);\n      setRandomRating(null);\n    } else {\n      const intervalId = setInterval(() => {\n        randomRating = Math.floor(Math.random() * 5) + 1;\n        dispatch(setRating({\n          id: data.id,\n          rating: randomRating\n        }));\n        setRandomRating(randomRating);\n      }, 1000);\n      setRandomRatingIntervalId(intervalId);\n    }\n  };\n  const sortedItems = useSelector(state => {\n    const {\n      sort,\n      items\n    } = state.ratingReducer;\n    console.log('sort', sort);\n    if (sort === 'By rating') {\n      console.log('By rating', sort);\n      return items.slice().sort((a, b) => b.rating - a.rating);\n    }\n    return items;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.rateImg,\n          src: imgRate,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.button,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.random_button,\n          onClick: handleRandomRating,\n          type: \"button\",\n          children: randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.singers,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(SingerItem, {\n          singer: item\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SingerList, \"hh4FmonryPNq6QGPrFf9gbgUtgs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SingerList;\nexport default SingerList;\n{/* <button className={styles.random_button}>RANDOM RATING</button> */}\n\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     // Установка данных о книгах при монтировании компонента\n//     dispatch(setRating(items));\n//   }, [dispatch]);\nvar _c;\n$RefreshReg$(_c, \"SingerList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","styles","imgRate","data","setRating","setSort","SingerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","SingerList","_s","dispatch","randomRatingIntervalId","setRandomRatingIntervalId","randomRating","setRandomRating","handleRandomRating","clearInterval","intervalId","setInterval","Math","floor","random","id","rating","sortedItems","state","sort","items","ratingReducer","console","log","slice","a","b","children","className","container","header","rateImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","button","random_button","onClick","type","singers","map","item","singer","name","_c","$RefreshReg$"],"sources":["C:/Java45/SingersRate/src/components/singerList/SingerList.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from '../../css_modules/singerlist.module.css';\r\nimport imgRate from '../../assets/img/Component.png';\r\nimport data from '../../data.json';\r\nimport { setRating } from '../../redux/slices/ratingSlice';\r\nimport { setSort } from '../../redux/slices/ratingSlice';\r\n\r\nimport SingerItem from '../singerItem/SingerItem';\r\n\r\nconst SingerList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\r\n    const [randomRating, setRandomRating] = useState(null);\r\n\r\n    const handleRandomRating = () => {\r\n        if (randomRatingIntervalId) {\r\n            clearInterval(randomRatingIntervalId);\r\n            setRandomRatingIntervalId(null);\r\n            setRandomRating(null);\r\n        } else {\r\n            const intervalId = setInterval(() => {\r\n                randomRating = Math.floor(Math.random() * 5) + 1;\r\n                dispatch(setRating({ id: data.id, rating: randomRating }));\r\n                setRandomRating(randomRating);\r\n            }, 1000);\r\n            setRandomRatingIntervalId(intervalId);\r\n        }\r\n    };\r\n    const sortedItems = useSelector((state) => {\r\n        const { sort, items } = state.ratingReducer;\r\n        console.log('sort', sort);\r\n        if (sort === 'By rating') {\r\n            console.log('By rating', sort);\r\n            return items.slice().sort((a, b) => b.rating - a.rating);\r\n        }\r\n        return items;\r\n    });\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <img className={styles.rateImg} src={imgRate} alt='' />\r\n                </div>\r\n                <div className={styles.button}>\r\n                    <button className={styles.random_button} onClick={handleRandomRating} type='button'>\r\n                        {randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'}\r\n                    </button>\r\n                </div>\r\n                <div className={styles.singers}>\r\n                    {items.map((item) => <SingerItem singer={item} key={item.name} />)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingerList;\r\n\r\n  {/* <button className={styles.random_button}>RANDOM RATING</button> */}\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     // Установка данных о книгах при монтировании компонента\r\n  //     dispatch(setRating(items));\r\n  //   }, [dispatch]);\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}