{"ast":null,"code":"var _jsxFileName = \"C:\\\\Java45\\\\SingersRate\\\\src\\\\components\\\\singerList\\\\SingerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from '../../css_modules/singerlist.module.css';\nimport imgRate from '../../assets/img/Component.png';\nimport data from '../../data.json';\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\nimport SingerItem from '../singerItem/SingerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingerList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const randomRatingIntervalId = useSelector(state => state.ratingReducer.randomRatingIntervalId);\n  useEffect(() => {\n    return () => {\n      // Clean up the interval when the component unmounts\n      if (randomRatingIntervalId) {\n        clearInterval(randomRatingIntervalId);\n        setRandomRatingIntervalId(null); // Reset interval ID to null\n      }\n    };\n  }, [randomRatingIntervalId]);\n  const handleRandomRating = () => {\n    if (randomRatingIntervalId) {\n      // If interval is running, stop it\n      clearInterval(randomRatingIntervalId);\n      setRandomRatingIntervalId(null);\n    } else {\n      // If interval is not running, start it\n      const intervalId = setInterval(() => {\n        const randomSinger = data.body[Math.floor(Math.random() * data.body.length)];\n        const randomRating = Math.floor(Math.random() * 11); // Random rating from 0 to 10\n        dispatch(toggleRandomRating({\n          singerName: randomSinger.name,\n          rating: randomRating\n        }));\n      }, 2000); // Change rating every 2 seconds (adjust this value as needed)\n      setRandomRatingIntervalId(intervalId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.rateImg,\n          src: imgRate,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.button,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.random_button,\n          onClick: handleRandomRating,\n          type: \"button\",\n          children: randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.singers,\n        children: data.body.map(item => /*#__PURE__*/_jsxDEV(SingerItem, {\n          singer: item\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SingerList, \"exqxbLnlo82TQI4UePNXlARMh7U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SingerList;\nexport default SingerList;\n{/* <button className={styles.random_button}>RANDOM RATING</button> */}\n\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     // Установка данных о книгах при монтировании компонента\n//     dispatch(setRating(items));\n//   }, [dispatch]);\n\n// const sortedItems = useSelector((state) => {\n//     const { sort, items } = state.ratingReducer;\n//     console.log('sort', sort);\n//     if (sort === 'By rating') {\n//         console.log('By rating', sort);\n//         return items.slice().sort((a, b) => b.rating - a.rating);\n//     }\n//     return items;\n// });\nvar _c;\n$RefreshReg$(_c, \"SingerList\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","styles","imgRate","data","toggleRandomRating","SingerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","SingerList","_s","dispatch","randomRatingIntervalId","state","ratingReducer","clearInterval","setRandomRatingIntervalId","handleRandomRating","intervalId","setInterval","randomSinger","body","Math","floor","random","length","randomRating","singerName","name","rating","children","className","container","header","rateImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","button","random_button","onClick","type","singers","map","item","singer","_c","$RefreshReg$"],"sources":["C:/Java45/SingersRate/src/components/singerList/SingerList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from '../../css_modules/singerlist.module.css';\r\nimport imgRate from '../../assets/img/Component.png';\r\nimport data from '../../data.json';\r\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\r\n\r\nimport SingerItem from '../singerItem/SingerItem';\r\n\r\n\r\nconst SingerList = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const randomRatingIntervalId = useSelector((state) => state.ratingReducer.randomRatingIntervalId);\r\n  \r\n    useEffect(() => {\r\n        return () => {\r\n          // Clean up the interval when the component unmounts\r\n          if (randomRatingIntervalId) {\r\n            clearInterval(randomRatingIntervalId);\r\n            setRandomRatingIntervalId(null); // Reset interval ID to null\r\n          }\r\n        };\r\n      }, [randomRatingIntervalId]);\r\n    \r\n      const handleRandomRating = () => {\r\n        if (randomRatingIntervalId) {\r\n          // If interval is running, stop it\r\n          clearInterval(randomRatingIntervalId);\r\n          setRandomRatingIntervalId(null);\r\n        } else {\r\n          // If interval is not running, start it\r\n          const intervalId = setInterval(() => {\r\n            const randomSinger = data.body[Math.floor(Math.random() * data.body.length)];\r\n            const randomRating = Math.floor(Math.random() * 11); // Random rating from 0 to 10\r\n            dispatch(toggleRandomRating({ singerName: randomSinger.name, rating: randomRating }));\r\n          }, 2000); // Change rating every 2 seconds (adjust this value as needed)\r\n          setRandomRatingIntervalId(intervalId);\r\n        }\r\n      };\r\n  \r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <img className={styles.rateImg} src={imgRate} alt='' />\r\n                </div>\r\n                <div className={styles.button}>\r\n                    <button className={styles.random_button} onClick={handleRandomRating} type='button'>\r\n                        {randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'}\r\n                    </button>\r\n                </div>\r\n                <div className={styles.singers}>\r\n                    {data.body.map((item) => <SingerItem singer={item} key={item.name} />)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingerList;\r\n\r\n  {/* <button className={styles.random_button}>RANDOM RATING</button> */}\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     // Установка данных о книгах при монтировании компонента\r\n  //     dispatch(setRating(items));\r\n  //   }, [dispatch]);\r\n  \r\n     // const sortedItems = useSelector((state) => {\r\n    //     const { sort, items } = state.ratingReducer;\r\n    //     console.log('sort', sort);\r\n    //     if (sort === 'By rating') {\r\n    //         console.log('By rating', sort);\r\n    //         return items.slice().sort((a, b) => b.rating - a.rating);\r\n    //     }\r\n    //     return items;\r\n    // });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}