{"ast":null,"code":"var _jsxFileName = \"C:\\\\Java45\\\\SingersRate\\\\src\\\\components\\\\singerList\\\\SingerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from '../../css_modules/singerlist.module.css';\nimport imgRate from '../../assets/img/Component.png';\nimport data from '../../data.json';\nimport { setRating } from '../../redux/slices/ratingSlice';\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\nimport SingerItem from '../singerItem/SingerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingerList = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\n  // const [randomRating, setRandomRating] = useState(null);\n\n  // const handleRandomRating = () => {\n  //     if (randomRatingIntervalId) {\n  //       clearInterval(randomRatingIntervalId);\n  //       setRandomRatingIntervalId(null);\n  //       setRandomRating(null);\n  //     } else {\n  //       const intervalId = setInterval(() => {\n  //         const randomRating = Math.floor(Math.random() * 10) + 1;\n  //         dispatch(setRating({ singerName: data.body.name, rating: randomRating }));\n  //         setRandomRating(randomRating);\n  //       }, 2000);\n  //       setRandomRatingIntervalId(intervalId);\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.rateImg,\n          src: imgRate,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.button,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.random_button,\n          onClick: handleRandomRating,\n          type: \"button\",\n          children: randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.singers,\n        children: data.body.map(item => /*#__PURE__*/_jsxDEV(SingerItem, {\n          singer: item,\n          randomRating: randomRating\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SingerList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = SingerList;\nexport default SingerList;\n{/* <button className={styles.random_button}>RANDOM RATING</button> */}\n\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     // Установка данных о книгах при монтировании компонента\n//     dispatch(setRating(items));\n//   }, [dispatch]);\n\n// const sortedItems = useSelector((state) => {\n//     const { sort, items } = state.ratingReducer;\n//     console.log('sort', sort);\n//     if (sort === 'By rating') {\n//         console.log('By rating', sort);\n//         return items.slice().sort((a, b) => b.rating - a.rating);\n//     }\n//     return items;\n// });\n\n// const dispatch = useDispatch();\n\n// const randomRatingIntervalId = useSelector((state) => state.ratingReducer.randomRatingIntervalId);\n\n// const handleRandomRating = () => {\n//   dispatch(toggleRandomRating());\n// };\nvar _c;\n$RefreshReg$(_c, \"SingerList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","styles","imgRate","data","setRating","toggleRandomRating","SingerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","SingerList","_s","dispatch","children","className","container","header","rateImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","button","random_button","onClick","handleRandomRating","type","randomRatingIntervalId","singers","body","map","item","singer","randomRating","name","_c","$RefreshReg$"],"sources":["C:/Java45/SingersRate/src/components/singerList/SingerList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from '../../css_modules/singerlist.module.css';\r\nimport imgRate from '../../assets/img/Component.png';\r\nimport data from '../../data.json';\r\nimport { setRating } from '../../redux/slices/ratingSlice';\r\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\r\n\r\nimport SingerItem from '../singerItem/SingerItem';\r\n\r\n\r\nconst SingerList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\r\n    // const [randomRating, setRandomRating] = useState(null);\r\n\r\n\r\n    // const handleRandomRating = () => {\r\n    //     if (randomRatingIntervalId) {\r\n    //       clearInterval(randomRatingIntervalId);\r\n    //       setRandomRatingIntervalId(null);\r\n    //       setRandomRating(null);\r\n    //     } else {\r\n    //       const intervalId = setInterval(() => {\r\n    //         const randomRating = Math.floor(Math.random() * 10) + 1;\r\n    //         dispatch(setRating({ singerName: data.body.name, rating: randomRating }));\r\n    //         setRandomRating(randomRating);\r\n    //       }, 2000);\r\n    //       setRandomRatingIntervalId(intervalId);\r\n    //     }\r\n    //   };\r\n  \r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <img className={styles.rateImg} src={imgRate} alt='' />\r\n                </div>\r\n                <div className={styles.button}>\r\n                    <button className={styles.random_button} onClick={handleRandomRating} type='button'>\r\n                        {randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'}\r\n                    </button>\r\n                </div>\r\n                <div className={styles.singers}>\r\n                    {data.body.map((item) => <SingerItem singer={item} key={item.name} randomRating={randomRating} />)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingerList;\r\n\r\n  {/* <button className={styles.random_button}>RANDOM RATING</button> */}\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     // Установка данных о книгах при монтировании компонента\r\n  //     dispatch(setRating(items));\r\n  //   }, [dispatch]);\r\n  \r\n     // const sortedItems = useSelector((state) => {\r\n    //     const { sort, items } = state.ratingReducer;\r\n    //     console.log('sort', sort);\r\n    //     if (sort === 'By rating') {\r\n    //         console.log('By rating', sort);\r\n    //         return items.slice().sort((a, b) => b.rating - a.rating);\r\n    //     }\r\n    //     return items;\r\n    // });\r\n\r\n    // const dispatch = useDispatch();\r\n    \r\n    // const randomRatingIntervalId = useSelector((state) => state.ratingReducer.randomRatingIntervalId);\r\n\r\n    // const handleRandomRating = () => {\r\n    //   dispatch(toggleRandomRating());\r\n    // };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,yCAAyC;AAC5D,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,kBAAkB,QAAQ,gCAAgC;AAEnE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIS,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA;MAAKO,SAAS,EAAEd,MAAM,CAACe,SAAU;MAAAF,QAAA,gBAC7BN,OAAA;QAAKO,SAAS,EAAEd,MAAM,CAACgB,MAAO;QAAAH,QAAA,eAC1BN,OAAA;UAAKO,SAAS,EAAEd,MAAM,CAACiB,OAAQ;UAACC,GAAG,EAAEjB,OAAQ;UAACkB,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACNhB,OAAA;QAAKO,SAAS,EAAEd,MAAM,CAACwB,MAAO;QAAAX,QAAA,eAC1BN,OAAA;UAAQO,SAAS,EAAEd,MAAM,CAACyB,aAAc;UAACC,OAAO,EAAEC,kBAAmB;UAACC,IAAI,EAAC,QAAQ;UAAAf,QAAA,EAC9EgB,sBAAsB,GAAG,oBAAoB,GAAG;QAAqB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNhB,OAAA;QAAKO,SAAS,EAAEd,MAAM,CAAC8B,OAAQ;QAAAjB,QAAA,EAC1BX,IAAI,CAAC6B,IAAI,CAACC,GAAG,CAAEC,IAAI,iBAAK1B,OAAA,CAACF,UAAU;UAAC6B,MAAM,EAAED,IAAK;UAAiBE,YAAY,EAAEA;QAAa,GAAtCF,IAAI,CAACG,IAAI;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAZ,EAAA,CAxCKD,UAAU;EAAA,QACKZ,WAAW;AAAA;AAAAuC,EAAA,GAD1B3B,UAAU;AA0ChB,eAAeA,UAAU;AAEvB,CAAC;;AAEH;;AAEE;AACA;AACA;AACA;;AAEG;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}