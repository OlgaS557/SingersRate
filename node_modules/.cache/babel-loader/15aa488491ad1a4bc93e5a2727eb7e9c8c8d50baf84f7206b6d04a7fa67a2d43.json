{"ast":null,"code":"var _jsxFileName = \"C:\\\\Java45\\\\SingersRate\\\\src\\\\components\\\\singerList\\\\SingerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from '../../css_modules/singerlist.module.css';\nimport imgRate from '../../assets/img/Component.png';\nimport data from '../../data.json';\nimport { setRating } from '../../redux/slices/ratingSlice';\nimport { sortSingersByRating } from '../../redux/slices/ratingSlice';\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\nimport SingerItem from '../singerItem/SingerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingerList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\n  const singers = useSelector(state => state.ratingReducer.singers);\n  useEffect(() => {\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(randomRatingIntervalId);\n  }, [randomRatingIntervalId]);\n  const handleRandomRating = () => {\n    if (randomRatingIntervalId) {\n      clearInterval(randomRatingIntervalId);\n      setRandomRatingIntervalId(null);\n    } else {\n      const intervalId = setInterval(() => {\n        data.body.forEach(singer => {\n          const randomRating = Math.floor(Math.random() * 10) + 1;\n          dispatch(setRating({\n            singerName: singer.name,\n            rating: randomRating\n          }));\n        });\n      }, 2000);\n      setRandomRatingIntervalId(intervalId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.rateImg,\n          src: imgRate,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.button,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.random_button,\n          onClick: handleRandomRating,\n          type: \"button\",\n          children: randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.singers,\n        children: singers.map(item => /*#__PURE__*/_jsxDEV(SingerItem, {\n          singer: item\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SingerList, \"MPkk7p12Q1OkE4FQZ58wgn43DD8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SingerList;\nexport default SingerList;\n{/* <button className={styles.random_button}>RANDOM RATING</button> */}\n\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     // Установка данных о книгах при монтировании компонента\n//     dispatch(setRating(items));\n//   }, [dispatch]);\n\n// const sortedItems = useSelector((state) => {\n//     const { sort, items } = state.ratingReducer;\n//     console.log('sort', sort);\n//     if (sort === 'By rating') {\n//         console.log('By rating', sort);\n//         return items.slice().sort((a, b) => b.rating - a.rating);\n//     }\n//     return items;\n// });\n\n// const dispatch = useDispatch();\n\n// const randomRatingIntervalId = useSelector((state) => state.ratingReducer.randomRatingIntervalId);\n\n// const handleRandomRating = () => {\n//   dispatch(toggleRandomRating());\n// };\nvar _c;\n$RefreshReg$(_c, \"SingerList\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","styles","imgRate","data","setRating","sortSingersByRating","toggleRandomRating","SingerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","SingerList","_s","dispatch","randomRatingIntervalId","setRandomRatingIntervalId","singers","state","ratingReducer","clearInterval","handleRandomRating","intervalId","setInterval","body","forEach","singer","randomRating","Math","floor","random","singerName","name","rating","children","className","container","header","rateImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","button","random_button","onClick","type","map","item","_c","$RefreshReg$"],"sources":["C:/Java45/SingersRate/src/components/singerList/SingerList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from '../../css_modules/singerlist.module.css';\r\nimport imgRate from '../../assets/img/Component.png';\r\nimport data from '../../data.json';\r\nimport { setRating } from '../../redux/slices/ratingSlice';\r\nimport { sortSingersByRating } from '../../redux/slices/ratingSlice';\r\nimport { toggleRandomRating } from '../../redux/slices/ratingSlice';\r\n\r\nimport SingerItem from '../singerItem/SingerItem';\r\n\r\n\r\nconst SingerList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [randomRatingIntervalId, setRandomRatingIntervalId] = useState(null);\r\n    const singers = useSelector((state) => state.ratingReducer.singers);\r\n\r\n    useEffect(() => {\r\n        // Clean up the interval when the component unmounts\r\n        return () => clearInterval(randomRatingIntervalId);\r\n    }, [randomRatingIntervalId]);\r\n\r\n    const handleRandomRating = () => {\r\n        if (randomRatingIntervalId) {\r\n            clearInterval(randomRatingIntervalId);\r\n            setRandomRatingIntervalId(null);\r\n        } else {\r\n            const intervalId = setInterval(() => {\r\n                data.body.forEach((singer) => {\r\n                    const randomRating = Math.floor(Math.random() * 10) + 1;\r\n                    dispatch(setRating({ singerName: singer.name, rating: randomRating }));\r\n                });\r\n\r\n            }, 2000);\r\n            setRandomRatingIntervalId(intervalId);\r\n        }\r\n\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <img className={styles.rateImg} src={imgRate} alt='' />\r\n                </div>\r\n                <div className={styles.button}>\r\n                    <button className={styles.random_button} onClick={handleRandomRating} type='button'>\r\n                        {randomRatingIntervalId ? 'Stop Random Rating' : 'Start Random Rating'}\r\n                    </button>\r\n                </div>\r\n                <div className={styles.singers}>\r\n                    {singers.map((item) => <SingerItem singer={item} key={item.name} />)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingerList;\r\n\r\n  {/* <button className={styles.random_button}>RANDOM RATING</button> */}\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     // Установка данных о книгах при монтировании компонента\r\n  //     dispatch(setRating(items));\r\n  //   }, [dispatch]);\r\n  \r\n     // const sortedItems = useSelector((state) => {\r\n    //     const { sort, items } = state.ratingReducer;\r\n    //     console.log('sort', sort);\r\n    //     if (sort === 'By rating') {\r\n    //         console.log('By rating', sort);\r\n    //         return items.slice().sort((a, b) => b.rating - a.rating);\r\n    //     }\r\n    //     return items;\r\n    // });\r\n\r\n    // const dispatch = useDispatch();\r\n    \r\n    // const randomRatingIntervalId = useSelector((state) => state.ratingReducer.randomRatingIntervalId);\r\n\r\n    // const handleRandomRating = () => {\r\n    //   dispatch(toggleRandomRating());\r\n    // };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}